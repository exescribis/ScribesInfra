-- @assert Department::MoreEmployeesThanProjects OK
-- @assert Employee::MoreProjectsHigherSalary OK
-- @assert Project::BudgetWithinDepartmentBudget KO
-- @assert Project::EmployeesInControllingDepartment OK # MUST FAIL

-- model: Demo.use
--
-- checking structure...
-- Multiplicity constraint violation in association `Controls':
--   Object `turbo' of class `Project' is connected to 0 objects of class `Department'
--   at association end `department' but the multiplicity is specified as `1'.
-- checking invariants...
-- checking invariant (1) `Department::MoreEmployeesThanProjects': OK.
-- checking invariant (2) `Employee::MoreProjectsHigherSalary': OK.
-- checking invariant (3) `Project::BudgetWithinDepartmentBudget': FAILED.
--   -> false : Boolean
-- Instances of Project violating the invariant:
--   -> Set{@turbo} : Set(Project)
-- checking invariant (4) `Project::EmployeesInControllingDepartment': FAILED.
--   -> false : Boolean
-- Instances of Project violating the invariant:
--   -> Set{@turbo} : Set(Project)
-- checked 4 invariants in 0.044s, 2 failures.


!create computing : Department
!computing.name := 'Computing departement'
!computing.location := 'Los alaambritos'
!computing.budget := 10000

!create djamel : Employee
!djamel.name := 'Djamel'
!djamel.salary := 2600

!create ioannis : Employee
!ioannis.name := 'Ioannis'
!ioannis.salary := 1900

!insert (djamel, computing) into WorksIn
!insert (ioannis, computing) into WorksIn

!create turbo : Project
!turbo.name := 'Maxi turbo project'
!turbo.budget := 5000


